def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') {
        reader -> localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def dartEnvironmentVariables = [
        FLAVOR_APP_NAME  : 'APP FLAVOR A',
        APP_SUFFIX: null,
        VERSION_NAME: '0.0.1',
        VERSION_NUMBER: 1
]

if (project.hasProperty('dart-defines')) {
    print("seriosuly-has-dart-defines")
    dartEnvironmentVariables = dartEnvironmentVariables + project.property('dart-defines')
            .split(',')
            .collectEntries { entry ->
                def pair = entry.split('%')
                [(pair.first().replace("3D", "")): pair.last().replace("3D", "")]
            }
} else {
    print("has-no-dart-defines")
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 29

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "za.co.sennit.gdg_dart_defines_demo"
        applicationIdSuffix dartEnvironmentVariables.APP_SUFFIX
        minSdkVersion 16
        targetSdkVersion 29
        versionCode dartEnvironmentVariables.VERSION_NUMBER
        versionName dartEnvironmentVariables.VERSION_NAME
        resValue "string", "app_name", dartEnvironmentVariables.APP_NAME
        resValue "string", "map_api_key", dartEnvironmentVariables.MAP_API_KEY
        archivesBaseName = dartEnvironmentVariables.APP_NAME
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
